"""add warning to order

Revision ID: 4f1ef490dafd
Revises: 58d3d219d571
Create Date: 2024-07-29 22:16:41.050915

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4f1ef490dafd'
down_revision: Union[str, None] = '58d3d219d571'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    # Function to check if a column exists in a table
    def column_exists(table_name, column_name):
        query = f"""
            SELECT EXISTS (
                SELECT 1 
                FROM information_schema.columns 
                WHERE table_name = '{table_name}' 
                AND column_name = '{column_name}'
            );
        """
        return bind.execute(sa.text(query)).scalar()
    
    # Add 'warnings' column to 'order' table if it does not exist
    if not column_exists('order', 'warnings'):
        op.add_column('order', sa.Column('warnings', sa.Boolean(), nullable=False,server_default='False'))
        
    # Add 'role' column to 'user' table if it does not exist
    # if not column_exists('user', 'role'):
    #     op.add_column('user', sa.Column('role', sa.Integer(), nullable=False,server_default='2'))
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('order', 'warnings')
    op.drop_column('user', 'role')
    # ### end Alembic commands ###
