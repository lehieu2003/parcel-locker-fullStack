"""add status to locker

Revision ID: ff9d1f73f597
Revises: 67fe3f279620
Create Date: 2024-07-23 14:02:16.390755

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ff9d1f73f597'
down_revision: Union[str, None] = '67fe3f279620'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    locker_status_enum = sa.Enum('Active', 'Inactive', name='locker_status')
    
    bind = op.get_bind()
    enum_exists = bind.dialect.has_type(bind, 'locker_status')
    
    if not enum_exists:
        locker_status_enum.create(op.get_bind(), checkfirst=True)
    column_exists_query = """
    SELECT EXISTS (
        SELECT 1 
        FROM information_schema.columns 
        WHERE table_name = 'locker' 
        AND column_name = 'locker_status'
    );"""

    column_exists = bind.execute(sa.text(column_exists_query)).scalar()

    # Add the column to the 'locker' table if it does not exist
    if not column_exists:
        op.add_column('locker', sa.Column('locker_status', locker_status_enum, nullable=False,server_default='Active'))
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('locker', 'locker_status')
    locker_status_enum = sa.Enum(name='locker_status')
    locker_status_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
